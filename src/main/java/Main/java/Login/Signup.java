/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main.java.Login;
import javax.imageio.ImageIO;
import javax.swing.*;

import Main.java.Database.Database;
import Main.java.Roles.*;
import Userinterface.java.Businessmen.BusinessmanDashboard;
import Userinterface.java.Businessmen.Smart_Industries;
import Userinterface.java.Student.StudentDashboard;
import Userinterface.java.Tourist.TouristDashboard;
import com.db4o.ObjectSet;

import java.awt.image.BufferedImage;
import java.io.File;
import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;
import javax.activation.*;
import java.awt.*;

/**
 *
 * @author sukhadapradhan
 */
public class Signup extends javax.swing.JPanel {

    /**
     * Creates new form Signup
     */
    private JPanel Container; // Initializing global variable 'Container'
    public Signup(JPanel c) {
        initComponents();
        Container = c;
    } //Constructor closes

    private void SendEmail(String reciever)
    {
        String to = reciever;

        // Sender's email ID needs to be mentioned
        String from = "sample12196@gmail.com";

        // Assuming you are sending email from through gmails smtp
        String host = "smtp.gmail.com";

        // Get system properties
        Properties properties = System.getProperties();

        // Setup mail server
        properties.put("mail.smtp.host", host);
        properties.put("mail.smtp.port", "465");
        properties.put("mail.smtp.ssl.enable", "true");
        properties.put("mail.smtp.auth", "true");

        // Get the Session object.// and pass username and password
        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {

            protected PasswordAuthentication getPasswordAuthentication() {

                return new PasswordAuthentication(from, "sampleaccount");

            }

        });

        // Used to debug SMTP issues
        session.setDebug(true);

        try {
            // Create a default MimeMessage object.
            MimeMessage message = new MimeMessage(session);

            // Set From: header field of the header.
            message.setFrom(new InternetAddress(from));

            // Set To: header field of the header.
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

            // Set Subject: header field
            message.setSubject("Welcome to smart City");

            // Now set the actual message
            message.setText("Thank you for joining smart City");

            System.out.println("sending...");
            // Send message
            Transport.send(message);
            System.out.println("Sent message successfully....");
        } catch (MessagingException mex) {
            System.out.println(mex.getMessage());
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        error = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        password1 = new javax.swing.JPasswordField();
        password2 = new javax.swing.JPasswordField();
        type = new javax.swing.JComboBox<>();
        BufferedImage iconImg = null;
        try
        {
            iconImg = ImageIO.read(new File("logo_light.png"));
        }
        catch(Exception e)
        {
            System.out.println();
        }
        ImageIcon icn = new ImageIcon(iconImg.getScaledInstance(250, 200, Image.SCALE_DEFAULT));
        jLabel3 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        LoginButton = new GUIComponents.RoundedPanel();
        LoginButton1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginRedirect = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(191, 227, 235));
        setMinimumSize(new java.awt.Dimension(850, 628));
        setName(""); // NOI18N
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel26.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("User Name");
        add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 110, -1, -1));

        jLabel27.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Password");
        add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, -1, -1));

        error.setFont(new java.awt.Font("Roboto", 2, 14)); // NOI18N
        error.setForeground(new java.awt.Color(255, 51, 51));
        add(error, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, -1, -1));

        jLabel29.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Email");
        add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 180, -1, 20));

        jLabel30.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Confirm Password");
        add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 320, -1, -1));

        jLabel31.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Type");
        add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 390, -1, -1));

        username.setForeground(new java.awt.Color(237, 176, 98));
        username.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 140, 250, 30));

        password1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password1ActionPerformed(evt);
            }
        });
        add(password1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 280, 250, 30));

        password2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password2ActionPerformed(evt);
            }
        });
        add(password2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 350, 250, 30));

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Tourist", "BusinessMan" }));
        add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, 250, 30));

        jLabel3.setIcon(icn);
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, 0, 220, 170));

        email.setForeground(new java.awt.Color(237, 176, 98));
        email.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 210, 250, 30));

        LoginButton.setBackground(new java.awt.Color(51, 204, 255));
        LoginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginButtonMouseClicked(evt);
            }
        });

        LoginButton1.setBackground(new java.awt.Color(0, 0, 0));
        LoginButton1.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        LoginButton1.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton1.setText("Signup");
        LoginButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout LoginButtonLayout = new javax.swing.GroupLayout(LoginButton);
        LoginButton.setLayout(LoginButtonLayout);
        LoginButtonLayout.setHorizontalGroup(
            LoginButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginButtonLayout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(LoginButton1)
                .addGap(40, 40, 40))
        );
        LoginButtonLayout.setVerticalGroup(
            LoginButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginButtonLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(LoginButton1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        add(LoginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 470, 140, 50));

        jLabel2.setBackground(new java.awt.Color(216, 238, 237));
        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 23)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(96, 190, 218));
        jLabel2.setText("User Signup");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 40, 140, 50));

        loginRedirect.setForeground(new java.awt.Color(51, 102, 255));
        loginRedirect.setText("Already a Member? Login");
        loginRedirect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginRedirectMouseClicked(evt);
            }
        });
        add(loginRedirect, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 540, 160, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/sukhadapradhan/Smart City Full Project/Login Image Countless1.png")); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 628));
    }// </editor-fold>//GEN-END:initComponents

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void LoginButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButton1MouseClicked
        String use = username.getText();
        String em = email.getText();
        String p1 = password1.getText();
        String p2 = password2.getText();
        if(use.isEmpty() || em.isEmpty() || p1.isEmpty() || p2.isEmpty())
        {
            error.setText("Fields are empty");
            return;
        }
        if(!p1.equals(p2))
        {
            error.setText("Password do not match");
            return;
        }

        //Type Selector
        int selected = type.getSelectedIndex();
        String ty = type.getItemAt(selected);
        User u = new User(use,null,null);
        ObjectSet<User> users = Database.db.get(u);
        if(!users.isEmpty())
        {
            error.setText("Username already in use");
            return;
        }
        u = new User(null,em,null);
        users = Database.db.get(u);
        if(!users.isEmpty())
        {
            error.setText("Email already in use");
            return;
        }
        SendEmail(em);
        if(ty.equalsIgnoreCase("Student"))
        {
            Student s = new Student(use,em,p1);
            Database.loggedIn = s;
            Database.db.set(s);
            StudentDashboard workarea = new StudentDashboard(Container);
            Container.add(workarea);
            CardLayout layout = (CardLayout) Container.getLayout();
            layout.next(Container);
            workarea.setVisible(true);
        }
        else if(ty.equalsIgnoreCase("Tourist"))
        {
            Tourist s = new Tourist(use,em,p1);
            Database.loggedIn = s;
            Database.db.set(s);
            TouristDashboard workarea = new TouristDashboard(Container);
            Container.add(workarea);
            CardLayout layout = (CardLayout) Container.getLayout();
            layout.next(Container);
            workarea.setVisible(true);
        }
        else if(ty.equalsIgnoreCase("BusinessMan"))
        {
            Businessman s = new Businessman(use,em,p1);
            Database.loggedIn = s;
            Database.db.set(s);
            BusinessmanDashboard workarea = new BusinessmanDashboard(Container);
            Container.add(workarea);
            CardLayout layout = (CardLayout) Container.getLayout();
            layout.next(Container);
            workarea.setVisible(true);
        }
    }//GEN-LAST:event_LoginButton1MouseClicked

    private void LoginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseClicked
           String use = username.getText();
           String em = email.getText();
           String p1 = password1.getText();
           String p2 = password2.getText();
           if(use.isEmpty() || em.isEmpty() || p1.isEmpty() || p2.isEmpty())
           {
               error.setText("Fields are empty");
               return;
           }
           if(!p1.equals(p2))
           {
               error.setText("Password do not match");
               return;
           }
           int selected = type.getSelectedIndex();
           String ty = type.getItemAt(selected);
           User u = new User(use,null,null);
           ObjectSet<User> users = Database.db.get(u);
           if(!users.isEmpty())
           {
               error.setText("Username already in use");
               return;
           }
           u = new User(null,em,null);
           users = Database.db.get(u);
            if(!users.isEmpty())
            {
                error.setText("Email already in use");
                return;
            }
            SendEmail(em);
           if(ty.equalsIgnoreCase("Student"))
           {
               MainAdmin s = new MainAdmin(use,em,p1);
               Database.db.set(s);
               StudentDashboard workarea = new StudentDashboard(Container);
               Container.add(workarea);
               CardLayout layout = (CardLayout) Container.getLayout();
               layout.next(Container);
               workarea.setVisible(true);
               Database.loggedIn = s;
           }
            else if(ty.equalsIgnoreCase("Tourist"))
            {
                Tourist s = new Tourist(use,em,p1);
                Database.db.set(s);
                TouristDashboard workarea = new TouristDashboard(Container);
                Container.add(workarea);
                CardLayout layout = (CardLayout) Container.getLayout();
                layout.next(Container);
                workarea.setVisible(true);
                Database.loggedIn = s;
            }
            else if(ty.equalsIgnoreCase("BusinessMan"))
            {
                Businessman s = new Businessman(use,em,p1);
                Database.db.set(s);
                BusinessmanDashboard workarea = new BusinessmanDashboard(Container);
                Container.add(workarea);
                CardLayout layout = (CardLayout) Container.getLayout();
                layout.next(Container);
                workarea.setVisible(true);
                Database.loggedIn = s;
            }
    }//GEN-LAST:event_LoginButtonMouseClicked
    private void password1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_password1ActionPerformed

    private void password2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_password2ActionPerformed

    private void loginRedirectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginRedirectMouseClicked
        Login workarea = new Login(Container);
        Container.add(workarea);
        CardLayout layout = (CardLayout) Container.getLayout();
        layout.next(Container);
    }//GEN-LAST:event_loginRedirectMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUIComponents.RoundedPanel LoginButton;
    private javax.swing.JLabel LoginButton1;
    private javax.swing.JTextField email;
    private javax.swing.JLabel error;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel loginRedirect;
    private javax.swing.JPasswordField password1;
    private javax.swing.JPasswordField password2;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
